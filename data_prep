from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.impute import SimpleImputer 
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline

def create_dataprep_pipeline(categorical_features, numerical_features):
    # transformation pipeline for the categorical columns
    categorical_pipeline = Pipeline(
      steps=[# imputatation of missing values
            ("imputer", SimpleImputer(
                strategy='most_frequent')),
            # one-hot encoding of categorical variables
            ("encoder", OneHotEncoder(
                # avoid creating two columns for columns with two values
                drop='if_binary',
                # handle values that appear only in test set
                handle_unknown="ignore"))]
    )

    # transformation pipeline for the numerical columns
    numerical_pipeline = Pipeline(
      steps=[# imputatation of missing values
            ("imputer", SimpleImputer(
                strategy='median')),
            # scaling of numerical variables
            ("scaler", StandardScaler())]
    )

    # preprocessing object that applies the transformation pipelines
    dataprep_pipeline = ColumnTransformer(
      transformers=[
          ("cat", categorical_pipeline, categorical_features),
          ("num", numerical_pipeline, numerical_features)
      ],
      # rest columns are skipped
      remainder='drop',
      verbose_feature_names_out=False
    )
    return dataprep_pipeline
